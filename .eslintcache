[{"C:\\Users\\jason\\OneDrive\\文件\\Web Tutorial\\web-tool\\src\\index.js":"1","C:\\Users\\jason\\OneDrive\\文件\\Web Tutorial\\web-tool\\src\\App.js":"2","C:\\Users\\jason\\OneDrive\\文件\\Web Tutorial\\web-tool\\src\\reportWebVitals.js":"3","C:\\Users\\jason\\OneDrive\\文件\\Web Tutorial\\web-tool\\src\\Tools\\Calculator.js":"4","C:\\Users\\jason\\OneDrive\\文件\\Web Tutorial\\web-tool\\src\\Tools\\Clock.js":"5"},{"size":579,"mtime":1611577967218,"results":"6","hashOfConfig":"7"},{"size":2039,"mtime":1611578133911,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":6669,"mtime":1611543460712,"results":"10","hashOfConfig":"7"},{"size":1113,"mtime":1611578085431,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1x2fv04",{"filePath":"14","messages":"15","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\jason\\OneDrive\\文件\\Web Tutorial\\web-tool\\src\\index.js",["24"],"C:\\Users\\jason\\OneDrive\\文件\\Web Tutorial\\web-tool\\src\\App.js",["25","26","27","28","29","30"],"C:\\Users\\jason\\OneDrive\\文件\\Web Tutorial\\web-tool\\src\\reportWebVitals.js",[],["31","32"],"C:\\Users\\jason\\OneDrive\\文件\\Web Tutorial\\web-tool\\src\\Tools\\Calculator.js",["33","34","35"],"import React,{useState} from \"react\";\r\nimport './Calculator.css';\r\n\r\nfunction Calculator() {\r\n\r\n    const [data,setData] = useState(\"0\");\r\n    const [isDecimal,setIsDecimal] = useState(false);\r\n    const [isPos,setPositive] = useState(true);\r\n    const [isAdd,setIsAdd] = useState(false);\r\n    const [isMin,setIsMin] = useState(false);\r\n    const [isMul,setIsMul] = useState(false);\r\n    const [isDiv,setIsDiv] = useState(false);\r\n    const [save,setSave] = useState(0.0);\r\n    const [isNextDataStart, setIsNextDataStart] = useState(false);\r\n    const [record1,setRecord1] = useState(\"\");\r\n    const [record2,setRecord2] = useState(\"\");\r\n    const [record3,setRecord3] = useState(\"\");\r\n\r\n    /* display operation function */\r\n    const dataCat = digit => {\r\n        if (!isNextDataStart && data.length <= 8)\r\n        {\r\n            if (data === \"0\"){\r\n                setData(digit);\r\n            }\r\n            else{\r\n                setData(data+digit);\r\n            }\r\n        }\r\n        else if (isNextDataStart)\r\n        {\r\n            setIsNextDataStart(false);\r\n            setData(digit);\r\n        }\r\n        reportStatus();\r\n    }\r\n\r\n    const clearData = () => {\r\n        setData(\"0\");\r\n        setIsDecimal(false);\r\n        setIsAdd(false);\r\n        setIsMin(false);\r\n        setIsMul(false);\r\n        setIsDiv(false);\r\n    }\r\n\r\n    const delData = () => {\r\n        if (data.length == 1){\r\n            setData(\"0\");\r\n        }\r\n        else{\r\n            if (data.slice(-1) === \".\")\r\n            {\r\n                setIsDecimal(false);\r\n            }\r\n            setData(data.substring(0,data.length-1));\r\n        }\r\n        reportStatus();\r\n    }\r\n\r\n    const addDot = () => {\r\n        if (!isDecimal){\r\n            setData(data+\".\");\r\n            setIsDecimal(true);\r\n        }\r\n        reportStatus();\r\n    }\r\n\r\n    const switchSign = () => {\r\n        if (data.substring(0,1) !== \"-\"){\r\n            setData(\"-\"+data);\r\n        }\r\n        else{\r\n            setData(data.substring(1,data.length));\r\n        }\r\n        reportStatus();\r\n    }\r\n\r\n    const nextNum = () => {\r\n        setIsNextDataStart(true);\r\n        setIsDecimal(false);\r\n        setIsAdd(false);\r\n        setIsMin(false);\r\n        setIsMul(false);\r\n        setIsDiv(false);\r\n    }\r\n\r\n    const reportStatus = () => {\r\n        console.log(\"data:\",data\r\n        ,\"save:\",save\r\n        ,\"isDecimal:\",isDecimal\r\n        ,\"isAdd\",isAdd\r\n        ,\"isMin\",isMin\r\n        ,\"isMul\",isMul\r\n        ,\"isDiv\",isDiv\r\n        ,\"isNextDataStart\",isNextDataStart);\r\n    }\r\n\r\n    /*Arithmetic function*/\r\n    const add = () => {\r\n        if (!isAdd && !isMin && !isMul && !isDiv)\r\n        {\r\n            nextNum();\r\n            setIsAdd(true);\r\n            setSave(parseFloat(Number(data)));\r\n            reportStatus();\r\n        }\r\n    }\r\n\r\n    const min = () => {\r\n        if (!isAdd && !isMin && !isMul && !isDiv)\r\n        {\r\n            nextNum();\r\n            setIsMin(true);\r\n            setSave(parseFloat(Number(data)));\r\n        }\r\n    }\r\n\r\n    const mul = () => {\r\n        if (!isAdd && !isMin && !isMul && !isDiv)\r\n        {\r\n            nextNum();\r\n            setIsMul(true);\r\n            setSave(parseFloat(Number(data)));\r\n        }\r\n    }\r\n\r\n    const div = () => {\r\n        if (!isAdd && !isMin && !isMul && !isDiv)\r\n        {\r\n            nextNum();\r\n            setIsDiv(true);\r\n            setSave(parseFloat(Number(data)));\r\n        }\r\n    }\r\n\r\n    const calculate = () => {\r\n        var ans = 0.0;\r\n        var sign = \"\";\r\n\r\n        if (isAdd){\r\n            ans = save+parseFloat(Number(data));\r\n            sign = \"+\";\r\n            setIsNextDataStart(true);\r\n        }\r\n        else if (isMin)\r\n        {\r\n            ans = save-parseFloat(Number(data));\r\n            sign = \"-\";\r\n            setIsNextDataStart(true);\r\n\r\n        }\r\n        else if (isMul)\r\n        {\r\n            ans = save*+parseFloat(Number(data));\r\n            sign = \"×\";\r\n            setIsNextDataStart(true);\r\n            \r\n        }\r\n        else if (isDiv)\r\n        {\r\n            ans = save/parseFloat(Number(data));\r\n            sign = \"÷\";\r\n            setIsNextDataStart(true);\r\n            \r\n        }\r\n        else{\r\n            return;\r\n        }\r\n\r\n        if (ans.toString().length > 8)\r\n        {\r\n            ans = ans.toFixed(7);\r\n        }\r\n        setRecord3(record2);\r\n        setRecord2(record1);\r\n        setRecord1(save.toString()+\" \"+sign+\" \"+data+\" = \"+ans.toString());\r\n        setData(ans.toString());\r\n        nextNum();\r\n        reportStatus();\r\n    }\r\n\r\n    /* HTML */\r\n    return (\r\n        <div className=\"calculator\">\r\n        <h1 className=\"displayPanel\">{data}</h1>\r\n        <table className=\"keyboard\">\r\n            <tr>\r\n                <td onClick={clearData} className=\"ACButton\">AC</td>\r\n                <td onClick={delData} className=\"DelButton\">DEL</td>\r\n                <td onClick={switchSign} className=\"thinButton\">[+/-]</td>\r\n                <td onClick={div} className={isDiv ? \"selectedButton\":\"thinButton\"}>÷</td>\r\n            </tr>\r\n            <tr>\r\n                <td onClick={e => dataCat(\"7\")} className=\"boldButton\">7</td>\r\n                <td onClick={e => dataCat(\"8\")} className=\"boldButton\">8</td>\r\n                <td onClick={e => dataCat(\"9\")} className=\"boldButton\">9</td>\r\n                <td onClick={mul} className={isMul ? \"selectedButton\":\"thinButton\"}>×</td>\r\n            </tr>\r\n            <tr>\r\n                <td onClick={e => dataCat(\"4\")} className=\"boldButton\">4</td>\r\n                <td onClick={e => dataCat(\"5\")} className=\"boldButton\">5</td>\r\n                <td onClick={e => dataCat(\"6\")} className=\"boldButton\">6</td>\r\n                <td onClick={min} className={isMin ? \"selectedButton\":\"thinButton\"}>-</td>\r\n            </tr>\r\n            <tr>\r\n                <td onClick={e => dataCat(\"1\")} className=\"boldButton\">1</td>\r\n                <td onClick={e => dataCat(\"2\")} className=\"boldButton\">2</td>\r\n                <td onClick={e => dataCat(\"3\")} className=\"boldButton\">3</td>\r\n                <td onClick={add} className={isAdd ? \"selectedButton\":\"thinButton\"}>+</td>\r\n            </tr>\r\n            <tr>\r\n                <td onClick={e => dataCat(\"0\")} className=\"thinButton\" colspan=\"2\">0</td>\r\n                <td onClick={addDot} className=\"boldButton\">.</td>\r\n                <td onClick={calculate} className=\"thinButton\">=</td>\r\n            </tr>\r\n        </table>\r\n        <p className=\"recordText\">Record</p>\r\n        <p className=\"record1\">{record1}</p>\r\n        <p className=\"record2\">{record2}</p>\r\n        <p className=\"record3\">{record3}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Calculator;","C:\\Users\\jason\\OneDrive\\文件\\Web Tutorial\\web-tool\\src\\Tools\\Clock.js",[],{"ruleId":"36","severity":1,"message":"37","line":6,"column":8,"nodeType":"38","messageId":"39","endLine":6,"endColumn":17},{"ruleId":"36","severity":1,"message":"40","line":14,"column":10,"nodeType":"38","messageId":"39","endLine":14,"endColumn":22},{"ruleId":"36","severity":1,"message":"41","line":15,"column":10,"nodeType":"38","messageId":"39","endLine":15,"endColumn":17},{"ruleId":"42","severity":1,"message":"43","line":40,"column":38,"nodeType":"44","endLine":40,"endColumn":116},{"ruleId":"42","severity":1,"message":"43","line":41,"column":37,"nodeType":"44","endLine":41,"endColumn":104},{"ruleId":"42","severity":1,"message":"43","line":42,"column":17,"nodeType":"44","endLine":42,"endColumn":65},{"ruleId":"42","severity":1,"message":"43","line":43,"column":17,"nodeType":"44","endLine":43,"endColumn":66},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"36","severity":1,"message":"49","line":8,"column":12,"nodeType":"38","messageId":"39","endLine":8,"endColumn":17},{"ruleId":"36","severity":1,"message":"50","line":8,"column":18,"nodeType":"38","messageId":"39","endLine":8,"endColumn":29},{"ruleId":"51","severity":1,"message":"52","line":48,"column":25,"nodeType":"53","messageId":"54","endLine":48,"endColumn":27},"no-unused-vars","'Stopwatch' is defined but never used.","Identifier","unusedVar","'isCalculator' is assigned a value but never used.","'isClock' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["55"],"no-negated-in-lhs",["56"],"'isPos' is assigned a value but never used.","'setPositive' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]